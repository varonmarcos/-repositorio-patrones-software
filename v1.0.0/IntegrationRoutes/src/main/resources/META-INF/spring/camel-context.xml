<?xml version="1.0" encoding="UTF-8"?>
<!-- Configures the Camel Context -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/spring"
	xmlns:cxf="http://camel.apache.org/schema/cxf"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

	<!-- import the other spring xml files -->
	<import resource="classpath:META-INF/spring/camel-cxf.xml" />


	<!-- Exceptions -->
	<bean id="authException" class="java.lang.IllegalArgumentException">
		<constructor-arg index="0"
			value="EL USUARIO NO ESTA AUTORIZADO POR FAVOR INGRESE SUS CREDENCIALES" />
	</bean>

	<bean id="tcVerificationFailed" class="java.lang.IllegalArgumentException">
		<constructor-arg index="0"
			value="EL PROCESO DE VALIDACION DE LA TARJETA DE CREDITO HA FALLADO" />
	</bean>

	<!-- Processors -->
	<bean id="loadTcParameters" class="org.kallsonnys.integration.processors.LoadTcParameters" />
	<bean id="verifyTcProcessor" class="org.kallsonnys.integration.processors.VerifyTcProcessor" />

	<camel:camelContext xmlns="http://camel.apache.org/schema/spring">
		<camel:route handleFault="true">

			<camel:from uri="cxf:bean:CustomerServicesEndpoint" />
			
			<to uri="log:input" />

			<setHeader headerName="operationName">
				<simple>${header.operationName}</simple>
			</setHeader>

			<setHeader headerName="operationNamespace">
				<simple>http://ws.oms.kallsonys.org/customerservices</simple>
			</setHeader>

			<camel:to uri="cxf:bean:CustomerServicesOMSEndpoint" />
		</camel:route>

		<camel:route handleFault="true">

			<camel:from uri="cxf:bean:ProductServicesEndpoint" />

			<!-- <when> -->
			<!-- <simple>${header.klstauthoken} == null</simple> -->
			<!-- <throwException ref="authException" /> -->
			<!-- </when> -->

			<setHeader headerName="operationName">
				<simple>${header.operationName}</simple>
			</setHeader>

			<setHeader headerName="operationNamespace">
				<simple>http://ws.oms.kallsonys.org/productservices</simple>
			</setHeader>

			<camel:to uri="cxf:bean:ProductServicesOMSEndpoint" />

		</camel:route>

		<camel:route handleFault="true">

			<camel:from uri="cxf:bean:CampaignServicesEndpoint" />

			<!-- <when> -->
			<!-- <simple>${header.klstauthoken} == null</simple> -->
			<!-- <throwException ref="authException" /> -->
			<!-- </when> -->

			<setHeader headerName="operationName">
				<simple>${header.operationName}</simple>
			</setHeader>

			<setHeader headerName="operationNamespace">
				<simple>http://ws.oms.kallsonys.org/campaignservices</simple>
			</setHeader>

			<camel:to uri="cxf:bean:CampaignServicesOMSEndpoint" />

		</camel:route>


		<camel:route handleFault="true">

			<camel:from uri="cxf:bean:OrderServicesEndpoint" />

			<!-- <when> -->
			<!-- <simple>${header.klstauthoken} == null</simple> -->
			<!-- <throwException ref="authException" /> -->
			<!-- </when> -->

<!-- 			<to uri="log:input?showHeaders=true" /> -->

			<choice>
				<when>
					<simple>${header.operationName} == 'createOrder'</simple>
					
					<to uri="log:input" />

					<to uri="bean:loadTcParameters" />
					
					<to uri="log:input" />

					<to uri="bean:verifyTcProcessor" />
					
					<to uri="log:input" />

				</when>
			</choice>

			<camel:when>
				<camel:simple>${header.validationTC} == 'false'</camel:simple>
				<throwException ref="tcVerificationFailed" />
			</camel:when>

			<setHeader headerName="operationName">
				<simple>${header.operationName}</simple>
			</setHeader>

			<setHeader headerName="operationNamespace">
				<simple>http://ws.oms.kallsonys.org/orderservices</simple>
			</setHeader>

			<camel:to uri="cxf:bean:OrderServicesOMSEndpoint" />

		</camel:route>

	</camel:camelContext>

</beans>
