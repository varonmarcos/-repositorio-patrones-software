<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.kallsonys.oms.master</groupId>
	<artifactId>POM-KallsonnysOMS-Master</artifactId>
	<packaging>pom</packaging>
	<version>v1.0.0-SNAPSHOT</version>
	<name>OMS  Master POM Project</name>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<spring.core.version>3.1.2.RELEASE</spring.core.version>
		<spring.security.core.version>3.1.0.RELEASE</spring.security.core.version>
		<spring.data.jpa.version>1.1.0.RELEASE</spring.data.jpa.version>

		<mysql.connector.version>5.1.21</mysql.connector.version>
		<hibernate.version>4.1.6.Final</hibernate.version>
		<c3p0.version>0.9.1.2</c3p0.version>

		<slf4j.version>1.6.1</slf4j.version>
		<log4j.version>1.2.14</log4j.version>

		<cglib.version>2.2.2</cglib.version>
		<aspectj.version>1.6.12</aspectj.version>

		<javax.servlet-api.version>2.5</javax.servlet-api.version>

		<!-- Testing -->
		<mockito.version>1.8.5</mockito.version>
		<junit.version>4.8.2</junit.version>

		<oms.version>v1.0.0-SNAPSHOT</oms.version>
	</properties>

	<build>
		<directory>dist</directory>
		<outputDirectory>bin/classes</outputDirectory>
		<sourceDirectory>src</sourceDirectory>
		<resources>
			<resource>
				<directory>config/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
		</resources>
		<testSourceDirectory>test</testSourceDirectory>
		<testOutputDirectory>bin/test</testOutputDirectory>
		<testResources>
			<testResource>
				<directory>config/test</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
						<encoding>ISO-8859-1</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.4.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.4</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<id>spring-ga</id>
			<name>spring GA releases</name>
			<url>http://repo.springsource.org/libs-release/</url>
		</repository>
		<repository>
			<id>spring-release</id>
			<name>spring GA releases</name>
			<url>http://repo.springsource.org/libs-release/</url>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<name>spring milestone releases</name>
			<url>http://repo.springsource.org/libs-milestone/</url>
		</repository>
		<repository>
			<id>jboss</id>
			<name>jboss Repository</name>
			<url>http://repository.jboss.org/maven2</url>
		</repository>
		<repository>
			<id>ibilio maven-2</id>
			<name>ibilio Repository</name>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>com.springsource.repository.bundles.external</id>
			<name>SpringSource Enterprise Bundle Repository - External Bundle Releases</name>
			<url>http://repository.springsource.com/maven/bundles/external</url>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>

			<!-- OMS -->
			<dependency>
				<groupId>org.kallsonys.oms.entities</groupId>
				<artifactId>ENT-KallsonnysOMS-Entities</artifactId>
				<version>${oms.version}</version>
			</dependency>

			<dependency>
				<groupId>org.kallsonys.oms.business</groupId>
				<artifactId>BUS-KallsonnysOMS-Business</artifactId>
				<version>${oms.version}</version>
			</dependency>

			<dependency>
				<groupId>org.kallsonys.oms.web</groupId>
				<artifactId>BUS-KallsonnysOMS-Web</artifactId>
				<version>${oms.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>ejb3-persistence</artifactId>
				<version>1.0.2.GA</version>
			</dependency>


			<!-- Spring Core -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- A seamless aspect-oriented extension to the Java programming language -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>

			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>

			<!-- Cglib is a powerful, high performance and quality Code Generation 
				Library, It is used to extend JAVA classes and implements interfaces at runtime. -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>${cglib.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Logger -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Apache -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.1</version>
			</dependency>

			<!-- The Simple Logging Facade for Java or (SLF4J) serves as a simple 
				facade or abstraction for various logging frameworks, e.g. java.util.logging, 
				log4j and logback, allowing the end user to plug in the desired logging framework 
				at deployment time. -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Spring Security -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.core.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Spring Data JPA -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-jpa</artifactId>
				<version>${spring.data.jpa.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.core.version}</version>
			</dependency>

			<!-- Database pooling -->
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- MySQL Connector -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.connector.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Hibernate and JPA -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-entitymanager</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-ehcache</artifactId>
				<version>${hibernate.version}</version>
			</dependency>
			<!-- Javax Servlet. This needs to be included for runtime only! -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${javax.servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Testing dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.core.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>